<launch>
    <arg name="name" default="bebop" />
    <arg name="x" default="0.0" />
    <arg name="y" default="0.0" />
    <arg name="z" default="0.02" />
    <arg name="wind_force" default="10.0"/>
    <arg name="wind_start" default="5.0"/>
    <arg name="wind_duration" default="10.0"/>
    <arg name="wind_direction_x" default="1.0"/>
    <arg name="wind_direction_y" default="0.0"/>
    <arg name="wind_direction_z" default="0.0"/>
    <arg name="enable_velodyne" default="true"/>
    <arg name="rviz_config" value="$(find bebop_gazebo)/config/rviz_detection.rviz" />
    
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="false" />
        <arg name="use_sim_time" value="true"/>
    </include>
    
    <include file="$(find bebop_gazebo)/launch/spawn_bebop.launch">
        <arg name="name" value="$(arg name)" />
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="z" value="$(arg z)"/>
        <arg name="wind_force" value="$(arg wind_force)"/>
        <arg name="wind_start" value="$(arg wind_start)"/>
        <arg name="wind_duration" value="$(arg wind_duration)"/>
        <arg name="wind_direction_x" value="$(arg wind_direction_x)"/>
        <arg name="wind_direction_y" value="$(arg wind_direction_y)"/>
        <arg name="wind_direction_z" value="$(arg wind_direction_z)"/>
        <arg name="enable_velodyne" value="$(arg enable_velodyne)" />
    </include>
    
    
    <!-- Spawn wind turbine -->
    <include file="$(find bebop_gazebo)/launch/spawn_wind_turbine.launch"/>
    
    <!-- Bebop control -->
    <include file="$(find bebop_control)/launch/bebop_control.launch"/>
    
    <!-- Bebop control -->
    <include file="$(find bebop_control)/launch/bebop_joy.launch"/>
    
    <group if="$(arg enable_velodyne)">
    
        <!-- Rviz for velodyne visualisation -->        
        <node 
            name="rviz_node" pkg="rviz" type="rviz" 
            args="-d $(arg rviz_config)" />
    </group>

    <!-- Load configuration parameters -->
    <rosparam 
        command="load" 
        file="$(find plane_detection_ros)/config/distance_control_parameters.yaml" />

    <!-- Start plane detection ROS -->
    <node
        pkg="plane_detection_ros"
        type="distance_control_node"
        name="distance_control_node"
        output="screen">
        
        <!-- Do all the subscriber remaps -->
        <remap from="distance"          to="distance"           />
        <remap from="joy"               to="joy"                />
        <remap from="/real/imu"         to="/mavros/imu/data"   />
        <remap from="/sim/odometry"     to="/bebop/odometry_gt" />
        <remap from="/cmd_vel"          to="cmd_vel"            />
        
        <!-- Do all the publisher remaps -->
        <remap from="control_state"     to="control_state"      />
        <remap from="/sim/attitude_sp"  to="/bebop/att_override"/>
        <remap from="/real/attitude_sp" to="/mavros_dummy/attitude_setpoint_raw"/>
    </node>

    <!-- Load parameters -->
    <rosparam command="load" file="$(find plane_detection_ros)/config/detection_parameters.yaml" />
    
    <!-- Launch plane detection -->
    <node 
        pkg="plane_detection_ros"
        type="plane_detection_node"
        name="plane_detection_node"
        output="screen">
        <remap from="/pointcloud" to="/leddar_points"/>
    </node>
    
</launch>
