#!/usr/bin/env python
PACKAGE = "plane_detection_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("dist_tresh",   double_t,    0,     "Distance threshold for plane detection",   0.01,     0.005,  0.5)
gen.add("min_lim_x",    double_t,    0,     "PointCloud minimum Box limit - x",          1.5,  0.5,  2)
gen.add("lim_x",        double_t,    0,     "PointCloud Box limit - x",                    2,  0.5,  100)
gen.add("lim_y",        double_t,    0,     "PointCloud Box limit - y",                    2,  0.5,  5)
gen.add("lim_z",        double_t,    0,     "PointCloud Box limit - z",                    2,  0.5,  5)
gen.add("param_opt",      bool_t,    0,     "Enable parameter optimization",                        True)
gen.add("init_kalman",    bool_t,    0,     "Initialize Kalman filter",                             True)
gen.add("noise_mv",     double_t,    0,     "Kalman Filter measured value noise",          1,    0,  50)
gen.add("noise_pos",    double_t,    0,     "Kalman Filter distance noise",                1,    0,   50)
gen.add("noise_vel",    double_t,    0,     "Kalman Filter distance rate noise",           1,    0,  50)
gen.add("min_points", int_t,         0,     "Minimum plane point count",                100,    0,  200)
exit(gen.generate(PACKAGE, "plane_detection_ros", "PlaneDetectionParameters"))